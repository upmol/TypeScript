import { renderBlock, renderToast } from "./lib.js";
export class User {
  constructor(username, avatarUrl) {
    this.username = username;
    this.avatarUrl = avatarUrl;
  }
}
export function getUserData() {
  const userData = localStorage.getItem("user");
  const data = typeof userData === "string" ? JSON.parse(userData) : undefined;
  if (typeof data === "object" && "username" in data && "avatarUrl" in data) {
    return new User(data.username, data.avatarUrl);
  }
  return "Возможно вы не залогинены!";
}
export function getFavoritesAmount() {
  const amountData = localStorage.getItem("favoritesAmount");
  const amount =
    typeof amountData === "string" ? JSON.parse(amountData) : undefined;
  if (!isNaN(Number(amount))) {
    return Number(amount);
  }
  return 0;
}
export function renderUserBlock(name, avatar, favoriteItemsAmount) {
  let favoritesCaption;
  if (favoriteItemsAmount && favoriteItemsAmount > 0) {
    favoritesCaption = favoriteItemsAmount;
  } else {
    favoritesCaption = "ничего нет";
  }
  const hasFavoriteItems = favoriteItemsAmount ? true : false;
  renderBlock(
    "user-block",
    `
    <div class="header-container">
      <img class="avatar" src="${avatar}" alt="${name}" />
      <div class="info">
          <p class="name">${name}</p>
          <p class="fav">
            <i class="heart-icon${
              hasFavoriteItems ? " active" : ""
            }"></i>${favoritesCaption}
          </p>
      </div>
    </div>
    `
  );
}
export function renderUserInfo() {
  const user = getUserData();
  const userFavorites = getFavoritesAmount();
  if (user instanceof User && typeof userFavorites === "number") {
    renderUserBlock(user.username, user.avatarUrl, userFavorites);
  }
  if (user instanceof User && typeof userFavorites !== "number") {
    renderUserBlock(user.username, user.avatarUrl);
  }
  if (typeof user === "string") {
    renderToast(
      {
        text: `${user}`,
        type: "success",
      },
      {
        name: "Понял",
        handler: () => {
          console.log("Уведомление закрыто");
        },
      }
    );
    renderBlock("user-block", `<br/><p>${user}</p>`);
  }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91c2VyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxXQUFXLEVBQUUsV0FBVyxFQUFFLE1BQU0sVUFBVSxDQUFDO0FBRXBELE1BQU0sT0FBTyxJQUFJO0lBR2YsWUFBWSxRQUFnQixFQUFFLFNBQWlCO1FBQzdDLElBQUksQ0FBQyxRQUFRLEdBQUcsUUFBUSxDQUFDO1FBQ3pCLElBQUksQ0FBQyxTQUFTLEdBQUcsU0FBUyxDQUFDO0lBQzdCLENBQUM7Q0FDRjtBQUVELE1BQU0sVUFBVSxXQUFXO0lBQ3pCLE1BQU0sUUFBUSxHQUFZLFlBQVksQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDdkQsTUFBTSxJQUFJLEdBQUcsT0FBTyxRQUFRLEtBQUssUUFBUSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUM7SUFDN0UsSUFBSSxPQUFPLElBQUksS0FBSyxRQUFRLElBQUksVUFBVSxJQUFJLElBQUksSUFBSSxXQUFXLElBQUksSUFBSSxFQUFFO1FBQ3pFLE9BQU8sSUFBSSxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsRUFBRSxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7S0FDaEQ7SUFFRCxPQUFPLDRCQUE0QixDQUFDO0FBQ3RDLENBQUM7QUFFRCxNQUFNLFVBQVUsa0JBQWtCO0lBQ2hDLE1BQU0sVUFBVSxHQUFZLFlBQVksQ0FBQyxPQUFPLENBQUMsaUJBQWlCLENBQUMsQ0FBQztJQUNwRSxNQUFNLE1BQU0sR0FDVixPQUFPLFVBQVUsS0FBSyxRQUFRLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQztJQUN0RSxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQyxFQUFFO1FBQzFCLE9BQU8sTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0tBQ3ZCO0lBRUQsT0FBTyxDQUFDLENBQUM7QUFDWCxDQUFDO0FBRUQsTUFBTSxVQUFVLGVBQWUsQ0FDN0IsSUFBWSxFQUNaLE1BQWMsRUFDZCxtQkFBNEI7SUFFNUIsSUFBSSxnQkFBaUMsQ0FBQztJQUN0QyxJQUFJLG1CQUFtQixJQUFJLG1CQUFtQixHQUFHLENBQUMsRUFBRTtRQUNsRCxnQkFBZ0IsR0FBRyxtQkFBbUIsQ0FBQztLQUN4QztTQUFNO1FBQ0wsZ0JBQWdCLEdBQUcsWUFBWSxDQUFDO0tBQ2pDO0lBRUQsTUFBTSxnQkFBZ0IsR0FBRyxtQkFBbUIsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUM7SUFFNUQsV0FBVyxDQUNULFlBQVksRUFDWjs7aUNBRTZCLE1BQU0sVUFBVSxJQUFJOzs0QkFFekIsSUFBSTs7a0NBRUUsZ0JBQWdCLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsRUFBRSxTQUFTLGdCQUFnQjs7OztLQUl2RixDQUNGLENBQUM7QUFDSixDQUFDO0FBRUQsTUFBTSxVQUFVLGNBQWM7SUFDNUIsTUFBTSxJQUFJLEdBQUcsV0FBVyxFQUFFLENBQUM7SUFDM0IsTUFBTSxhQUFhLEdBQUcsa0JBQWtCLEVBQUUsQ0FBQztJQUMzQyxJQUFJLElBQUksWUFBWSxJQUFJLElBQUksT0FBTyxhQUFhLEtBQUssUUFBUSxFQUFFO1FBQzdELGVBQWUsQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFFLElBQUksQ0FBQyxTQUFTLEVBQUUsYUFBYSxDQUFDLENBQUM7S0FDL0Q7SUFDRCxJQUFJLElBQUksWUFBWSxJQUFJLElBQUksT0FBTyxhQUFhLEtBQUssUUFBUSxFQUFFO1FBQzdELGVBQWUsQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFFLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQztLQUNoRDtJQUNELElBQUksT0FBTyxJQUFJLEtBQUssUUFBUSxFQUFFO1FBQzVCLFdBQVcsQ0FDVDtZQUNFLElBQUksRUFBRSxHQUFHLElBQUksRUFBRTtZQUNmLElBQUksRUFBRSxTQUFTO1NBQ2hCLEVBQ0Q7WUFDRSxJQUFJLEVBQUUsT0FBTztZQUNiLE9BQU8sRUFBRSxHQUFHLEVBQUU7Z0JBQ1osT0FBTyxDQUFDLEdBQUcsQ0FBQyxxQkFBcUIsQ0FBQyxDQUFDO1lBQ3JDLENBQUM7U0FDRixDQUNGLENBQUM7UUFDRixXQUFXLENBQUMsWUFBWSxFQUFFLFdBQVcsSUFBSSxNQUFNLENBQUMsQ0FBQztLQUNsRDtBQUNILENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyByZW5kZXJCbG9jaywgcmVuZGVyVG9hc3QgfSBmcm9tICcuL2xpYi5qcyc7XG5cbmV4cG9ydCBjbGFzcyBVc2VyIHtcbiAgdXNlcm5hbWU6IHN0cmluZztcbiAgYXZhdGFyVXJsOiBzdHJpbmc7XG4gIGNvbnN0cnVjdG9yKHVzZXJuYW1lOiBzdHJpbmcsIGF2YXRhclVybDogc3RyaW5nKSB7XG4gICAgdGhpcy51c2VybmFtZSA9IHVzZXJuYW1lO1xuICAgIHRoaXMuYXZhdGFyVXJsID0gYXZhdGFyVXJsO1xuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRVc2VyRGF0YSgpOiB1bmtub3duIHtcbiAgY29uc3QgdXNlckRhdGE6IHVua25vd24gPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgndXNlcicpO1xuICBjb25zdCBkYXRhID0gdHlwZW9mIHVzZXJEYXRhID09PSAnc3RyaW5nJyA/IEpTT04ucGFyc2UodXNlckRhdGEpIDogdW5kZWZpbmVkO1xuICBpZiAodHlwZW9mIGRhdGEgPT09ICdvYmplY3QnICYmICd1c2VybmFtZScgaW4gZGF0YSAmJiAnYXZhdGFyVXJsJyBpbiBkYXRhKSB7XG4gICAgcmV0dXJuIG5ldyBVc2VyKGRhdGEudXNlcm5hbWUsIGRhdGEuYXZhdGFyVXJsKTtcbiAgfVxuXG4gIHJldHVybiAn0JLQvtC30LzQvtC20L3QviDQstGLINC90LUg0LfQsNC70L7Qs9C40L3QtdC90YshJztcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldEZhdm9yaXRlc0Ftb3VudCgpOiB1bmtub3duIHtcbiAgY29uc3QgYW1vdW50RGF0YTogdW5rbm93biA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdmYXZvcml0ZXNBbW91bnQnKTtcbiAgY29uc3QgYW1vdW50ID1cbiAgICB0eXBlb2YgYW1vdW50RGF0YSA9PT0gJ3N0cmluZycgPyBKU09OLnBhcnNlKGFtb3VudERhdGEpIDogdW5kZWZpbmVkO1xuICBpZiAoIWlzTmFOKE51bWJlcihhbW91bnQpKSkge1xuICAgIHJldHVybiBOdW1iZXIoYW1vdW50KTtcbiAgfVxuXG4gIHJldHVybiAwO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcmVuZGVyVXNlckJsb2NrKFxuICBuYW1lOiBzdHJpbmcsXG4gIGF2YXRhcjogc3RyaW5nLFxuICBmYXZvcml0ZUl0ZW1zQW1vdW50PzogbnVtYmVyXG4pOiB2b2lkIHtcbiAgbGV0IGZhdm9yaXRlc0NhcHRpb246IHN0cmluZyB8IG51bWJlcjtcbiAgaWYgKGZhdm9yaXRlSXRlbXNBbW91bnQgJiYgZmF2b3JpdGVJdGVtc0Ftb3VudCA+IDApIHtcbiAgICBmYXZvcml0ZXNDYXB0aW9uID0gZmF2b3JpdGVJdGVtc0Ftb3VudDtcbiAgfSBlbHNlIHtcbiAgICBmYXZvcml0ZXNDYXB0aW9uID0gJ9C90LjRh9C10LPQviDQvdC10YInO1xuICB9XG5cbiAgY29uc3QgaGFzRmF2b3JpdGVJdGVtcyA9IGZhdm9yaXRlSXRlbXNBbW91bnQgPyB0cnVlIDogZmFsc2U7XG5cbiAgcmVuZGVyQmxvY2soXG4gICAgJ3VzZXItYmxvY2snLFxuICAgIGBcbiAgICA8ZGl2IGNsYXNzPVwiaGVhZGVyLWNvbnRhaW5lclwiPlxuICAgICAgPGltZyBjbGFzcz1cImF2YXRhclwiIHNyYz1cIiR7YXZhdGFyfVwiIGFsdD1cIiR7bmFtZX1cIiAvPlxuICAgICAgPGRpdiBjbGFzcz1cImluZm9cIj5cbiAgICAgICAgICA8cCBjbGFzcz1cIm5hbWVcIj4ke25hbWV9PC9wPlxuICAgICAgICAgIDxwIGNsYXNzPVwiZmF2XCI+XG4gICAgICAgICAgICA8aSBjbGFzcz1cImhlYXJ0LWljb24ke2hhc0Zhdm9yaXRlSXRlbXMgPyAnIGFjdGl2ZScgOiAnJ31cIj48L2k+JHtmYXZvcml0ZXNDYXB0aW9ufVxuICAgICAgICAgIDwvcD5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICAgIGBcbiAgKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHJlbmRlclVzZXJJbmZvKCk6IHZvaWQge1xuICBjb25zdCB1c2VyID0gZ2V0VXNlckRhdGEoKTtcbiAgY29uc3QgdXNlckZhdm9yaXRlcyA9IGdldEZhdm9yaXRlc0Ftb3VudCgpO1xuICBpZiAodXNlciBpbnN0YW5jZW9mIFVzZXIgJiYgdHlwZW9mIHVzZXJGYXZvcml0ZXMgPT09ICdudW1iZXInKSB7XG4gICAgcmVuZGVyVXNlckJsb2NrKHVzZXIudXNlcm5hbWUsIHVzZXIuYXZhdGFyVXJsLCB1c2VyRmF2b3JpdGVzKTtcbiAgfVxuICBpZiAodXNlciBpbnN0YW5jZW9mIFVzZXIgJiYgdHlwZW9mIHVzZXJGYXZvcml0ZXMgIT09ICdudW1iZXInKSB7XG4gICAgcmVuZGVyVXNlckJsb2NrKHVzZXIudXNlcm5hbWUsIHVzZXIuYXZhdGFyVXJsKTtcbiAgfVxuICBpZiAodHlwZW9mIHVzZXIgPT09ICdzdHJpbmcnKSB7XG4gICAgcmVuZGVyVG9hc3QoXG4gICAgICB7XG4gICAgICAgIHRleHQ6IGAke3VzZXJ9YCxcbiAgICAgICAgdHlwZTogJ3N1Y2Nlc3MnLFxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgbmFtZTogJ9Cf0L7QvdGP0LsnLFxuICAgICAgICBoYW5kbGVyOiAoKSA9PiB7XG4gICAgICAgICAgY29uc29sZS5sb2coJ9Cj0LLQtdC00L7QvNC70LXQvdC40LUg0LfQsNC60YDRi9GC0L4nKTtcbiAgICAgICAgfSxcbiAgICAgIH1cbiAgICApO1xuICAgIHJlbmRlckJsb2NrKCd1c2VyLWJsb2NrJywgYDxici8+PHA+JHt1c2VyfTwvcD5gKTtcbiAgfVxufVxuIl19
